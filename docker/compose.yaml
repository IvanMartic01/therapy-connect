services:
  user-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${TC_USER_DB}
      POSTGRES_USER: ${TC_USER_DB_USERNAME}
      POSTGRES_PASSWORD: ${TC_USER_DB_PW}
    ports:
      - ${TC_USER_DB_PORT}:5432
    volumes:
      - ./${TC_USER_DB}:/var/lib/postgresql/data`

  blog-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${TC_BLOG_DB}
      POSTGRES_USER: ${TC_BLOG_DB_USERNAME}
      POSTGRES_PASSWORD: ${TC_BLOG_DB_PW}
    ports:
      - ${TC_BLOG_DB_PORT}:5432
    volumes:
      - ./${TC_BLOG_DB}:/var/lib/postgresql/data`

  review-db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${TC_REVIEW_DB}
      POSTGRES_USER: ${TC_REVIEW_DB_USERNAME}
      POSTGRES_PASSWORD: ${TC_REVIEW_DB_PW}
    ports:
      - ${TC_REVIEW_DB_PORT}:5432
    volumes:
      - ./${TC_REVIEW_DB}:/var/lib/postgresql/data`

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    command: start-dev --import-realm
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - KC_LOG_LEVEL=INFO
      - KC_HOSTNAME_URL=http://host.docker.internal:8090 # host.docker.internal is used to access to host machine
      - KC_HOSTNAME_ADMIN_URL=http://host.docker.internal:8090
      - KC_DB=postgres
      - KC_DB_URL_HOST=keycloak-db # This is the name of dabase service
      - KC_DB_URL_DATABASE=${KC_DB}
      - KC_DB_USERNAME=${KC_DB_USERNAME}
      - KC_DB_PASSWORD=${KC_DB_PASSWORD}
      - KC_DB_SCHEMA=public
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_HOSTNAME_STRICT=false
      - KC_PROXY=edge
      - TZ=${TZ}
    ports:
      - ${KC_PORT}:8080
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    depends_on:
      keycloak-db:
        condition: service_healthy
    networks:
      - sandbox_network

  keycloak-db:
    image: postgres:latest
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - POSTGRES_DB=${KC_DB}
      - POSTGRES_USER=${KC_DB_USERNAME}
      - POSTGRES_PASSWORD=${KC_DB_PASSWORD}
      - TZ=${TZ}
    ports:
      - ${KC_DB_PORT}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KC_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./${KC_DB}:/var/lib/postgresql/data
    networks:
      - sandbox_network

  rabbit:
    image: rabbitmq:3.13-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 5s

networks:
  sandbox_network:
    driver: bridge
